from netmiko import ConnectHandler
from concurrent.futures import ThreadPoolExecutor

# Define your device information
devices = [
    {
        'device_type': 'cisco_ios',
        'host': '192.168.1.100',
        'username': 'admin',
        'password': 'hackerzone',
    },
    {
        'device_type': 'cisco_ios',
        'host': '192.168.1.105',
        'username': 'admin',
        'password': 'hackerzone',
    },
    {
        'device_type': 'cisco_ios',
        'host': '192.168.1.110',
        'username': 'admin',
        'password': 'hackerzone',
    },
    {
        'device_type': 'cisco_ios',
        'host': '192.168.1.115',
        'username': 'admin',
        'password': 'hackerzone',
    },
    {
        'device_type': 'cisco_ios',
        'host': '192.168.1.120',
        'username': 'admin',
        'password': 'hackerzone',
    },
    {
        'device_type': 'cisco_ios',
        'host': '192.168.1.103',
        'username': 'admin',
        'password': 'hackerzone',
    },
]

# Define the command to send
command = 'show ip interface brief'

def create_connection(device):
    return ConnectHandler(**device)

def commands_output(netmiko_connection, command="show ip interface brief"):
    try:
        print("\n\n\n\n")
        print(f" Wait we are connecting to server {netmiko_connection.host} ".center(200, "*"))
        result = netmiko_connection.send_command(command, use_textfsm=True)
        return f"This is the output of command sent to server {netmiko_connection.host}:\n{result}"
    except Exception as e:
        return f"This is the exception for {netmiko_connection.host}: {e}"
    finally:
        netmiko_connection.disconnect()

# Store connection objects in a list
connections = []

# Create connections and get output using ThreadPoolExecutor
with ThreadPoolExecutor(max_workers=5) as executor:
    connections = list(executor.map(create_connection, devices))
    connection_output = list(executor.map(commands_output, connections))

# Print all command outputs
for output in connection_output:
    print(output)
